name: Nightly TFE Tests
on:
  workflow_dispatch:
  schedule:
    - cron: 0 0 * * *

jobs:
  codegen:
    name: Codegen
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version-file: go.mod
          cache: true

      - name: Install mockgen
        run: |
          set -eux -o pipefail
          MOCKGEN_VERSION=$(curl -Ls -o /dev/null -w %{url_effective}   https://github.com/golang/mock/releases/latest | awk -F'/v' '{printf$2}')
          MOCKGEN_ZIP=mock_${MOCKGEN_VERSION}_linux_amd64.tar.gz
          curl -OL https://github.com/golang/mock/releases/download/v$MOCKGEN_VERSION/$MOCKGEN_ZIP
          sudo tar xvzf $MOCKGEN_ZIP --strip-components 1 -C /usr/local
          sudo chmod +x /usr/local/mockgen
          rm -f $MOCKGEN_ZIP
          echo /usr/local/ >> $GITHUB_PATH

      - name: Get dependencies
        run: go mod download

      - name: Generate mocks
        run:  ./generate_mocks.sh

      - name: verify go.mod and go.sum are consistent
        run : go mod tidy

      - name: Ensure nothing changed
        run: git diff --exit-code

  instance:
    runs-on: ubuntu-latest
    steps:
      - name: terraform-cloud-run
        uses: brandonc/terraform-cloud-run-action@v1
        with:
          organization: hashicorp-v2
          workspace: tflocal-go-tfe-nightly
          token: ${{ secrets.TF_WORKFLOW_TFLOCAL_CLOUD_TFC_TOKEN }}
          wait: true

  tests:
    needs: instance
    runs-on: ubuntu-latest
    timeout-minutes: 30
    strategy:
      fail-fast: false
      matrix:
        parallel: [3]
        index: [0, 1, 2]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version-file: go.mod
          cache: true

      - name: Sync dependencies
        run: |
          go mod download
          go mod tidy

      - name: Install gotestsum
        run: go install gotest.tools/gotestsum@latest

      - name: terraform-cloud-outputs
        id: tflocal
        uses: brandonc/terraform-cloud-outputs-action@v1
        with:
          token: ${{ secrets.TF_WORKFLOW_TFLOCAL_CLOUD_TFC_TOKEN }}
          organization: hashicorp-v2
          workspace: tflocal-go-tfe-nightly

      - name: Split acceptance tests
        id: test_split
        uses: brandonc/go-test-split-action@v1
        with:
          index: ${{ matrix.index }}
          total: ${{ matrix.parallel }}

      - name: Run Tests
        env:
          TFE_ADDRESS: ${{fromJSON(steps.tflocal.outputs.workspace-outputs-json).tfe_address}}
          TFE_TOKEN: ${{fromJSON(steps.tflocal.outputs.workspace-outputs-json).tfe_token}}
          ENABLE_TFE: "1"
          TFC_RUN_TASK_URL: "https://httpstat.us/200"
          GITHUB_POLICY_SET_IDENTIFIER: "hashicorp/test-policy-set"
          GITHUB_REGISTRY_MODULE_IDENTIFIER: "hashicorp/terraform-random-module"
          OAUTH_CLIENT_GITHUB_TOKEN: "${{ secrets.OAUTH_CLIENT_GITHUB_TOKEN }}"
          GO111MODULE: "on"
        run: |
          gotestsum --format short-verbose -- -timeout=40m -run "${{ steps.test_split.outputs.run }}"

  tests-summarize:
    needs: [tests]
    runs-on: ubuntu-latest
    if: ${{ always() }}
    steps:
      - name: Check tests Status
        run: |
          if [ "${{ needs.tests.result }}" = "success" ]; then
            exit 0
          fi
          exit 1

#   slack-notify:
#     needs: tests
#     if: always() && (needs.tests.result == 'failure')
#     runs-on: ubuntu-latest
#     steps:
#       - name: Send slack notification on failure
#         uses: slackapi/slack-github-action@v1.23.0
#         with:
#           payload: |
#             {
#               "text": ":x::moon::sob: Nightly TFE tests *FAILED*",
#               "attachments": [
#                 {
#                   "color": "#C41E3A",
#                   "blocks": [
#                     {
#                       "type": "section",
#                       "fields": [
#                         {
#                           "type": "mrkdwn",
#                           "text": "*Workflow:*\n${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
#                         }
#                       ]
#                     }
#                   ]
#                 }
#               ]
#             }
#         env:
#           SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
#           SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK

  cleanup:
    runs-on: ubuntu-latest
    needs: ["tests-summarize"]
    if: "${{ always() }}"
    steps:
      - name: Destroy nightly TFE instance
        uses: brandonc/terraform-cloud-run-action@v1
        with:
          token: ${{ secrets.TF_WORKFLOW_TFLOCAL_CLOUD_TFC_TOKEN }}
          organization: hashicorp-v2
          workspace: tflocal-go-tfe-nightly
          is-destroy: true
          wait: true



